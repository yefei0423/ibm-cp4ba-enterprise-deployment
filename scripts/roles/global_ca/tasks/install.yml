- name: Create Global CA directory for generated files
  ansible.builtin.file:
    path: "{{ global_ca_output_directory }}"
    state: directory
    mode: u+rwx

- name: Get exiting secret
  kubernetes.core.k8s_info:
    api_key: "{{ global_ca_k8s_api_key | default(omit) }}"
    host: "{{ global_ca_k8s_host | default(omit) }}"
    api_version: v1
    kind: Secret
    name: global-ca
    namespace: "{{ global_ca_output_namespace }}"
  register: global_ca_secret

- name: Save Global CA if already rpesent
  block:

    - name: Save Global CA key
      ansible.builtin.copy:
        dest: "{{ global_ca_output_directory }}/global-ca.key"
        content: "{{ global_ca_secret.resources[0].data['tls.key'] | b64decode }}"
        mode: u+rwx

    - name: Save Global CA crt
      ansible.builtin.copy:
        dest: "{{ global_ca_output_directory }}/global-ca.crt"
        content: "{{ global_ca_secret.resources[0].data['tls.crt'] | b64decode }}"
        mode: u+rwx

  when: global_ca_secret.resources | length != 0

- name: Generate & save Global CA if not provided
  block:

    - name: Generate an OpenSSL private key
      openssl_privatekey:
        path: "{{ global_ca_output_directory }}/global-ca.key"

    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      openssl_csr:
        path: "{{ global_ca_output_directory }}/global-ca.csr"
        privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
        subject: "CN='Global CA'"
        basic_constraints:
          - CA:TRUE
        basic_constraints_critical: true

    - name: Generate a Self Signed OpenSSL certificate
      openssl_certificate:
        path: "{{ global_ca_output_directory }}/global-ca.crt"
        privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
        csr_path: "{{ global_ca_output_directory }}/global-ca.csr"
        provider: selfsigned
        selfsigned_not_after: "+36500d"

    - name: Load TLS key data
      ansible.builtin.slurp:
        src: '{{ global_ca_output_directory }}/global-ca.key'
      register: slurped_key_data

    - name: Decode data and store as fact
      ansible.builtin.set_fact:
        _global_ca_key: "{{ slurped_key_data.content }}"

    - name: Load TLS crt data
      ansible.builtin.slurp:
        src: '{{ global_ca_output_directory }}/global-ca.crt'
      register: slurped_crt_data

    - name: Decode data and store as fact
      ansible.builtin.set_fact:
        _global_ca_crt: "{{ slurped_crt_data.content }}"

    - name: Create Project
      ansible.builtin.include_role:
        name: common
        tasks_from: create-project
      vars:
        common_k8s_api_key: "{{ global_ca_k8s_api_key | default(omit) }}"
        common_k8s_host: "{{ global_ca_k8s_host | default(omit) }}"
        common_namespace_name: "{{ global_ca_output_namespace }}"
        common_output_directory: "{{ global_ca_output_directory }}"

    - name: Prepare yaml file for Secret
      ansible.builtin.template:
        src: secret.yaml.j2
        dest: "{{ global_ca_output_directory }}/secret.yaml"
        mode: u+rwx

    - name: Add Secret
      kubernetes.core.k8s:
        api_key: "{{ global_ca_k8s_api_key | default(omit) }}"
        host: "{{ global_ca_k8s_host | default(omit) }}"
        state: present
        force: true
        merge_type: merge
        src: "{{ global_ca_output_directory }}/secret.yaml"
        wait: true
        wait_sleep: 15
        wait_timeout: 15

  when: global_ca_secret.resources | length == 0

- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_k8s_api_key: "{{ global_ca_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ global_ca_k8s_host | default(omit) }}"
    common_output_to_var: "apps_endpoint_domain"

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: "{{ global_ca_output_directory }}/wildcard.key"

- name: Generate an OpenSSL Certificate Signing Request with Subject information
  openssl_csr:
    path: "{{ global_ca_output_directory }}/wildcard.csr"
    privatekey_path: "{{ global_ca_output_directory }}/wildcard.key"
    subject: "CN=Wildcard"
    subject_alt_name: "DNS:*.{{ apps_endpoint_domain }}"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: "{{ global_ca_output_directory }}/wildcard.crt"
    privatekey_path: "{{ global_ca_output_directory }}/wildcard.key"
    csr_path: "{{ global_ca_output_directory }}/wildcard.csr"
    provider: ownca
    ownca_path: "{{ global_ca_output_directory }}/global-ca.crt"
    ownca_privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
    ownca_not_after: "+36500d"
