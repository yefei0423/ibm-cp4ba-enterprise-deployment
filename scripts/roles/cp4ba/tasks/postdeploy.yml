# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=tasks-business-automation-navigator
# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=tasks-business-automation-navigator point 2.
# License files generated following https://www.ibm.com/docs/en/daeja-viewone/5.0.x?topic=modules-enabling-viewer-add-in-content-navigator
# IBM Daeja ViewONE Virtual Permanent Redaction Server Module & IBM Daeja ViewONE Virtual Module for Microsoft Office are part of CP4BA
#   as per LI at http://www-03.ibm.com/software/sla/sladb.nsf/lilookup/31BA4BF94C59AD55852586FE0060B39C?OpenDocument

- name: Get Navigator Pod
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - app={{ cp4ba_cr_meta_name }}-navigator-deploy
  register: pods
  retries: 40
  delay: 15

- name: Copy Daeja License files to output dir
  ansible.builtin.copy:
    src: "files/ban/{{ item }}"
    dest: "{{ cp4ba_output_directory }}/{{ item }}"
    mode: 0664
  with_items:
    - lic-server-virtual.v1
    - lic-server.v1

- name: Copy Daeja License
  kubernetes.core.k8s_cp:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ pods.resources[0].metadata.name }}"
    remote_path: /opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides/
    local_path: "{{ cp4ba_output_directory }}/{{ item }}"
  with_items:
    - lic-server-virtual.v1
    - lic-server.v1

- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_output_to_var: "apps_endpoint_domain"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=tasks-business-automation-studio
# Get access token for ZEN administrative initial user
- name: Get Zen Initial Admin User Secret
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Secret
    namespace: "{{ cp4ba_project_name }}"
    name: admin-user-details
  register: secret
  retries: 40
  delay: 15

# Based on introspection of Zen NGINX configs in Deployment ibm-nginx in /user-home/_global_/nginx-conf.d/icp4d-open-api-configmap.conf
# Based on CP4BA Operator code ansible\roles\AS-ID\tasks\iam-verify-and-add.yml@69+
- name: Get Zen Initial Admin User Acccess Token
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icp4d-api/v1/authorize"
    method: POST
    body_format: json
    body:
      username: admin
      password: "{{ secret.resources[0].data.initial_admin_password | b64decode }}"
    validate_certs: false
    status_code: 200
  register: token_response

# Groups endpoint found based on the network dev tools in the browser
- name: Add All Roles to cpadmins group
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: POST
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      name: cpadmins
      role_identifiers: "{{ user_roles }}"
    validate_certs: false
    status_code:
      - 409
      - 201
  register: group_response
  vars:
    user_roles:
      - zen_administrator_role
      - iaf-automation-admin
      - iaf-automation-analyst
      - iaf-automation-developer
      - iaf-automation-operator
      - zen_user_role

- name: Register ldap group with the zen group
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ group_response.json.group_id }}/members"
    method: POST
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      user_identifiers: []
      ldap_groups: ["cn={{ group_response.json.name }},ou=Groups,dc=cp"]
    validate_certs: false
    status_code:
      - 200
  when: group_response.status == 201

- name: Add ldap group to zen group
  block:

    - name: Get the zen groups
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
        method: GET
        headers:
          Accept: application/json
          Authorization: "Bearer {{ token_response.json | json_query('token') }}"
        validate_certs: false
        status_code: 200
      register: get_groups_response

    - name: Register ldap group with the zen group cpadmins
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ group_id }}/members"
        method: POST
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ token_response.json | json_query('token') }}"
        body_format: json
        body:
          user_identifiers: []
          ldap_groups: ["cn={{ group_name }},ou=Groups,dc=cp"]
        validate_certs: false
        return_content: true
      register: register_group_response
      vars:
        group_id_query: json.results[?name == 'cpadmins']
        group_id: "{{ get_groups_response | json_query(group_id_query) | first | json_query('group_id') }}"
        group_name: "{{ get_groups_response | json_query(group_id_query) | first | json_query('name') }}"
      failed_when: >
        (register_group_response.status != 200) and
        ('duplicate key value' not in register_group_response.content)

  when: group_response.status != 409

# Groups endpoint found based on the network dev tools in the browser
- name: Add All Roles to cpusers groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: POST
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      name: "{{ item }}"
      role_identifiers: "{{ user_roles }}"
    validate_certs: false
    status_code:
      - 201
      - 409
  vars:
    user_roles:
      - iaf-automation-analyst
      - iaf-automation-developer
      - iaf-automation-operator
      - zen_user_role
  with_items:
    - cpusers
    - cpusers1
  register: group_responses

- name: Register ldap groups with the zen groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ item.json.group_id }}/members"
    method: POST
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      user_identifiers: []
      ldap_groups: ["cn={{ item.json.name }},ou=Groups,dc=cp"]
    validate_certs: false
    status_code:
      - 200
  when: item.status == 201
  loop: "{{ group_responses.results }}"

- name: Add ldap group to zen group
  block:

    - name: Get the zen groups
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
        method: GET
        headers:
          Accept: application/json
          Authorization: "Bearer {{ token_response.json | json_query('token') }}"
        validate_certs: false
        status_code: 200
      register: get_groups_response

    - name: Register ldap group with the zen group cpusers
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ group_id }}/members"
        method: POST
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ token_response.json | json_query('token') }}"
        body_format: json
        body:
          user_identifiers: []
          ldap_groups: ["cn={{ group_name }},ou=Groups,dc=cp"]
        validate_certs: false
        return_content: true
      register: register_group_response
      loop:
        - cpusers
        - cpusers1
      vars:
        group_id_query: json.results[?name == '{{ item }}']
        group_id: "{{ get_groups_response | json_query(group_id_query) | first | json_query('group_id') }}"
        group_name: "{{ get_groups_response | json_query(group_id_query) | first | json_query('name') }}"
      failed_when: >
        (register_group_response.status != 200) and
        ('duplicate key value' not in register_group_response.content)

  when: (409 in group_responses | json_query('results[*].status'))

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=secrets-creating-custom-bpc-workforce-secret
- name: Get BPM Systems Federated Response
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/pfs/rest/bpm/federated/v1/systems"
    method: GET
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    validate_certs: false
    status_code:
      - 200
  register: bpm_systems_response

- name: Prepare yaml file for the Workforce Insights Secret
  ansible.builtin.template:
    src: bai/workforce-insights-config-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/workforce-insights-config-secret.yaml"
    mode: u+rwx
  vars:
    system_type_query: json.federationResult[?systemType=='SYSTEM_TYPE_WLE']
    system_id: "{{ bpm_systems_response | json_query(system_type_query) | first | json_query('systemID') }}"
    username: cpadmin
    password: "{{ cp4ba_universal_password }}"
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/bawaut"

- name: Add the Workforce Insights Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    src: "{{ cp4ba_output_directory }}/workforce-insights-config-secret.yaml"
    state: present
    merge_type: merge
    force: false
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Get BPC Pods
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - component = iaf-insights-engine-cockpit
  register: pods
  retries: 40
  delay: 15

- name: Delete BPC pods
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    state: absent
    namespace: "{{ cp4ba_project_name }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ pods.resources }}"

- name: Wait for BPC Deployment Available State
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: v1
    common_resource_kind: Deployment
    common_resource_name: iaf-insights-engine-cockpit
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Available
    common_retries: 80
    common_delay: 15

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=gst-task-2-connecting-git-repository-sharing-decision-service
- name: Create ADS organization in Gitea
  ansible.builtin.uri:
    url: "https://gitea.{{ apps_endpoint_domain }}/api/v1/orgs"
    method: POST
    headers:
      Content-Type: application/json
    body_format: json
    body:
      description: ""
      full_name: ""
      location: ""
      repo_admin_change_team_access: true
      username: ads
      visibility: private
      website: ""
    user: cpadmin
    password: "{{ cp4ba_universal_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code:
      - 201
      - 422

- name: Get maven plugins definition from ADS
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/download/index.json"
    method: GET
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    validate_certs: false
    status_code: 200
  register: ads_maven_plugins_response

- name: Process ADS maven plugins
  include_tasks: ads-maven-plugins.yml
  with_dict: "{{ ads_maven_plugins_response.json | json_query('resources') }}"

- name: Get roles
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/roles"
    method: GET
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    validate_certs: false
    status_code: 200
  register: roles_response

- name: Retrieve existing ADS admin role ID
  ansible.builtin.set_fact:
    ads_admin_role_id: "{{ roles_response.json | json_query(condition_query) | first | default('', true) }}"
  vars:
    condition_query:
      "rows[?doc.role_name == 'ADS Admin'].id"

- name: Create ADS admin role
  block:

    # Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=services-managing-user-permissions
    - name: Create ADS admin role
      ansible.builtin.uri:
        url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/role"
        method: POST
        headers:
          Authorization: "Bearer {{ token_response.json | json_query('token') }}"
        body_format: json
        body:
          role_name: ADS Admin
          description: ""
          permissions:
            - administer_ads_platform
            - execute_ads_decision
            - manage_ads_decision
            - monitor_ads_runtime
        validate_certs: false
        status_code: 201
      register: admin_role_response

    - name: Set ADS admin role ID
      ansible.builtin.set_fact:
        ads_admin_role_id: "{{ admin_role_response.json | json_query('id') }}"

  when: ads_admin_role_id | length == 0

- name: Get groups
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups"
    method: GET
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    validate_certs: false
    status_code: 200
  register: groups_response

- name: Get cpadmins group id
  ansible.builtin.set_fact:
    cpadmins_group_id: "{{ groups_response.json | json_query(condition_query) | first }}"
  vars:
    condition_query: "results[?name == 'cpadmins'].group_id"

- name: Add ADS Admin role to cpadmins group
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v2/groups/{{ cpadmins_group_id }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      add_role_identifiers:
        - "{{ ads_admin_role_id }}"
    validate_certs: false
    status_code:
      - 200
      - 500
  register: group_response
  failed_when: group_response.status == 500 and group_response.json | json_query('exception') is not search('.*duplicate key value*')

- name: Add ADS Admin role to default admin user
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/usermgmt/v1/user/admin?add_roles=true"
    method: PUT
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      username: cpadmin
      user_roles:
        - "{{ ads_admin_role_id }}"
    validate_certs: false
    status_code:
      - 200

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=credentials-configuring-maven-repository-manager
- name: Add Maven credential
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ads/rest-api/api/admin/credential"
    method: POST
    headers:
      Authorization: "Bearer {{ token_response.json | json_query('token') }}"
    body_format: json
    body:
      credentialsType: USERNAME
      credentialsUsage: MAVEN
      discriminator": "https://nexus.{{ apps_endpoint_domain }}/repository/maven-releases/"
      credentials": "cpadmin:{{ cp4ba_universal_password }}"
    validate_certs: false
    status_code: 200
  register: ads_credential_response

- name: Create ADP organization in Gitea
  ansible.builtin.uri:
    url: "https://gitea.{{ apps_endpoint_domain }}/api/v1/orgs"
    method: POST
    headers:
      Content-Type: application/json
    body_format: json
    body:
      description: ""
      full_name: ""
      location: ""
      repo_admin_change_team_access: true
      username: adp
      visibility: private
      website: ""
    user: cpadmin
    password: "{{ cp4ba_universal_password }}"
    force_basic_auth: true
    validate_certs: false
    status_code:
      - 201
      - 422

- name: Get Natural Language Extractor Pod
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - app={{ cp4ba_cr_meta_name }}-natural-language-extractor
  register: pods
  retries: 40
  delay: 15

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=processing-loading-default-sample-data
- name: Download Init Tenants scripts
  kubernetes.core.k8s_cp:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ pods.resources[0].metadata.name }}"
    remote_path: /data-org/db_sample_data/imports.tar.xz
    local_path: "{{ cp4ba_output_directory }}/imports.tar.xz"
    state: from_pod

# This is needed as ansible k8s_cp is not reliable for larger files
- name: Nexus upload imports.tar.xz
  ansible.builtin.include_role:
    name: common
    tasks_from: nexus-upload
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_file_folder_path: "{{ cp4ba_output_directory }}"
    common_file_name: imports.tar.xz
    common_universal_password: "{{ cp4ba_universal_password }}"

- name: Download Init Tenants scripts to DB2
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      sudo curl -kv --user "cpadmin:{{ cp4ba_universal_password }}" http://{{ nexus_hostname }}:8081/repository/raw-hosted/cp4ba/imports.tar.xz
      --output /mnt/blumeta0/home/db2inst1/sqllib/_adp_tmp/DB2/imports.tar.xz
  register: command_status

- name: Set Init Tenants files ownership
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: |
      sudo chown -R db2inst1:db2iadm1 /mnt/blumeta0/home/db2inst1/sqllib/_adp_tmp/DB2/imports.tar.xz
  register: command_status

- name: Extract Init Tenants scripts
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      cd sqllib/_adp_tmp/DB2;
      tar -xvf imports.tar.xz;
      "
  register: command_status

- name: Run Init Tenants scripts for Tenant1
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c '
      cd sqllib/_adp_tmp/DB2;
      echo -e "TENANT1\n
      default\n
      y" | ./LoadDefaultData.sh;
      '
  register: command_status

- name: Run Init Tenants scripts for Tenant2
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c '
      cd sqllib/_adp_tmp/DB2;
      echo -e "TENANT2\n
      default\n
      y" | ./LoadDefaultData.sh;
      '
  register: command_status

# Create Route for IER CPE configuration
- name: Prepare yaml file for ierconfig Route
  ansible.builtin.template:
    src: ier/ier-cpe-route.yaml.j2
    dest: "{{ cp4ba_output_directory }}/ier-cpe-route.yaml"
    mode: u+rwx

- name: Create ierconfig Route
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    namespace: "{{ cp4ba_project_name }}"
    src: "{{ cp4ba_output_directory }}/ier-cpe-route.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for resource condition generic
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition-generic
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: route.openshift.io/v1
    common_resource_kind: Route
    common_resource_name: ierconfig
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_query: resources[*].status.ingress[0].conditions[0].status
    common_condition_value: 'True'
    common_retries: 10
    common_delay: 10

- name: Create a directory for IER config
  ansible.builtin.file:
    path: "{{ cp4ba_output_directory }}/ierconfig"
    state: directory
    mode: u+rwx

- name: Extract IER config
  ansible.builtin.unarchive:
    src: "files/ier/ierconfig.tgz"
    dest: "{{ cp4ba_output_directory }}/ierconfig"

- name: Template ierconfig/configure/configuration/config.ini
  ansible.builtin.template:
    src: "{{ cp4ba_output_directory }}/ierconfig/configure/configuration/config.ini"
    dest: "{{ cp4ba_output_directory }}/ierconfig/configure/configuration/config.ini"
    mode: u+rwx

- name: Template ierconfig/configure/profiles/configureWorkflows.xml
  ansible.builtin.template:
    src: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/configureWorkflows.xml"
    dest: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/configureWorkflows.xml"
    mode: u+rwx

- name: Template ierconfig/configure/profiles/createMarkingSetsAndAddOns.xml
  ansible.builtin.template:
    src: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/createMarkingSetsAndAddOns.xml"
    dest: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/createMarkingSetsAndAddOns.xml"
    mode: u+rwx

- name: Template ierconfig/configure/profiles/environmentObjectStoreConfiguration.xml
  ansible.builtin.template:
    src: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/environmentObjectStoreConfiguration.xml"
    dest: "{{ cp4ba_output_directory }}/ierconfig/configure/profiles/environmentObjectStoreConfiguration.xml"
    mode: u+rwx

# Based on https://www.ibm.com/docs/en/cpfs?topic=apis-oidc-registration#get2 (Get access token by using username and password)
- name: Get IAM access token
  ansible.builtin.uri:
    url: "https://cp-console.{{ apps_endpoint_domain }}/idprovider/v1/auth/identitytoken"
    method: POST
    headers:
      Content-Type: application/x-www-form-urlencoded;charset=UTF-8
    body_format: form-urlencoded
    body:
      grant_type: password
      username: cpadmin
      password: "{{ cp4ba_universal_password }}"
      scope: openid
    validate_certs: false
    status_code: 200
  register: cpadmin_token_response

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=resources-generating-authorization-token
- name: Exchange IAM access token for Zen token
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/v1/preauth/validateAuth"
    method: GET
    headers:
      iam-token: "{{ cpadmin_token_response | json_query('json.access_token') }}"
      username: cpadmin
    validate_certs: false
    status_code: 200
  register: cpadmin_token_response

- name: Create CodeModules folder
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/content-services-graphql/graphql"
    method: POST
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
    body_format: json
    body:
      query: |
        mutation CreateCodeModulesFolder {createFolder(repositoryIdentifier:
        "FPOS", folderProperties: {name: "CodeModules", parent: {identifier: "/"} }) {id} }
    validate_certs: false
    status_code:
      - 200
  register: folder_response
  failed_when: ( folder_response.json | json_query('errors') | default([], true) | length > 1 ) and
    ( folder_response.json | json_query('errors[0].extensions.serverErrorMessage')
      is not match('A uniqueness requirement has been violated. The value for property FolderName of class Folder is not unique.') )

- name: Execute task createMarkingSetsAndAddOns
  ansible.builtin.shell: |
    {{ cp4ba_output_directory }}/ierconfig/configure/configmgr_cl execute -task createMarkingSetsAndAddOns
  register: ier_configmgr_output
  changed_when: true
  failed_when: ier_configmgr_output.rc != 0

- name: Execute task configureFPOS
  ansible.builtin.shell: |
    {{ cp4ba_output_directory }}/ierconfig/configure/configmgr_cl execute -task configureFPOS
  register: ier_configmgr_output
  changed_when: true
  failed_when: ier_configmgr_output.rc != 0 and
    (ier_configmgr_output.stdout is not search('.*The current object store is already configured to the latest version.*'))

- name: Execute task configureROS
  ansible.builtin.shell: |
    {{ cp4ba_output_directory }}/ierconfig/configure/configmgr_cl execute -task configureROS
  register: ier_configmgr_output
  changed_when: true
  failed_when: ier_configmgr_output.rc != 0

- name: Execute task configureWorkflows
  ansible.builtin.shell: |
    {{ cp4ba_output_directory }}/ierconfig/configure/configmgr_cl execute -task configureWorkflows
  register: ier_configmgr_output
  changed_when: true
  failed_when: ier_configmgr_output.rc != 0 and
    (ier_configmgr_output.stdout is not search('.*workflow component queues were configured with FileNet P8 Component Manager.*'))

- name: Execute task transferWorkflows
  ansible.builtin.shell: |
    {{ cp4ba_output_directory }}/ierconfig/configure/configmgr_cl execute -task transferWorkflows
  register: ier_configmgr_output
  changed_when: true
  failed_when: ier_configmgr_output.rc != 0

- name: Copy AdditionalJars.tgz
  ansible.builtin.copy:
    src: "files/ier/AdditionalJars.tgz"
    dest: "{{ cp4ba_output_directory }}/AdditionalJars.tgz"
    mode: u+rwx

# This is needed as ansible k8s_cp is not reliable for larger files
- name: Nexus upload AdditionalJars.tgz
  ansible.builtin.include_role:
    name: common
    tasks_from: nexus-upload
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_file_folder_path: "{{ cp4ba_output_directory }}"
    common_file_name: AdditionalJars.tgz
    common_universal_password: "{{ cp4ba_universal_password }}"

- name: Get TM pod
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - "app={{ cp4ba_cr_meta_name }}-tm-deploy"
  register: tm_pod

# Based on https://www.ibm.com/docs/en/enterprise-records/5.2.1?topic=in-configuring-content-navigator-task-manager-enterprise-records
# Omit TM-Liberty.xml as it is already in cp4ba-tm-config
- name: Download AdditionalJars.tgz to TM Pod
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ tm_pod.resources[0].metadata.name }}"
    command: >
      curl -kv --user "cpadmin:{{ cp4ba_universal_password }}" http://{{ nexus_hostname }}:8081/repository/raw-hosted/cp4ba/AdditionalJars.tgz
      --output /tmp/AdditionalJars.tgz
  register: command_status

- name: Extract AdditionalJars.tgz to TM Pod
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ tm_pod.resources[0].metadata.name }}"
    command: >
      tar xvf /tmp/AdditionalJars.tgz -C /opt/ibm/extTM
  register: command_status

- name: Get TM Pods
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - "app={{ cp4ba_cr_meta_name }}-tm-deploy"
  register: pods
  retries: 40
  delay: 15

- name: Delete TM pods
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    state: absent
    namespace: "{{ cp4ba_project_name }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ pods.resources }}"

- name: Wait for TM Deployment Available State
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: v1
    common_resource_kind: Deployment
    common_resource_name: "{{ cp4ba_cr_meta_name }}-tm-deploy"
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Available
    common_retries: 80
    common_delay: 15

- name: Navigator Logon
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/logon"
    method: POST
    body: "desktop=admin"
    force_basic_auth: true
    status_code: 200
    headers:
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: InternalIamRealm
      Content-Type: "application/x-www-form-urlencoded"
    validate_certs: false
    timeout: 60
    return_content: true
  register: login

- name: icn session
  ansible.builtin.set_fact:
    content: "{{ login.content[4:] }}"
    login_jsession: "{{ login.cookies['icn-JSESSIONID'] }}"
    cookie_jsessionid_name: icn-JSESSIONID

# - name: Get list of plugins installed
#   ansible.builtin.uri:
#     url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/admin/configuration"
#     method: POST
#     return_content: true
#     follow_redirects: all
#     body: "action=list&id=navigator&userid=cpadmin&type=plugins&sorted=true&configuration=ApplicationConfig&\
#       login_desktop=admin&application=navigator&securityTopic=plugins.plugins&desktop=admin"
#     body_format: form-urlencoded
#     validate_certs: false
#     headers:
#       Content-Type: "application/x-www-form-urlencoded"
#       Connection: "keep-alive"
#       Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
#       security_token: "{{ content.security_token }}"
#       Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
#       auth-token-realm: "InternalIamRealm"
#     timeout: 60
#   register: plugins_response

# - name: Get plugin response
#   ansible.builtin.set_fact:
#     plugins_reponse_json: "{{ plugins_response.content[4:] }}"

# - name: Set registered status to false
#   ansible.builtin.set_fact:
#     plugin_registered: false

# - name: Check if the IER plugin is registered
#   ansible.builtin.set_fact:
#     plugin_registered: true
#   when: "'IERApplicationPlugin' in item.id"
#   loop: "{{ plugins_reponse_json.list }}"

# - name: Load IERApplicationPlugin
#   ansible.builtin.uri:
#     url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/plugin?\
#       desktop=admin&\
#       application=navigator&\
#       fileName={{ 'https://cpd-'+cp4ba_project_name+'.'+apps_endpoint_domain+'/ier/EnterpriseRecordsPlugin/IERApplicationPlugin.jar' | urlencode() }}&\
#       userid=cpadmin"
#     method: GET
#     return_content: true
#     follow_redirects: all
#     body_format: form-urlencoded
#     validate_certs: false
#     headers:
#       Content-Type: "application/x-www-form-urlencoded"
#       Connection: "keep-alive"
#       Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
#       security_token: "{{ content.security_token }}"
#       Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
#       auth-token-realm: "InternalIamRealm"
#     timeout: 60
#   register: plugin_load_response
#   failed_when: "'name' not in plugin_load_response.content"
#   when: not plugin_registered

# - name: Extract content from plugin load response
#   ansible.builtin.set_fact:
#     plugin_load_response_content: "{{ plugin_load_response.content[4:] }}"
#   when: not plugin_registered

# - name: Add IERApplicationPlugin
#   ansible.builtin.uri:
#     url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/plugin"
#     method: POST
#     body: "{
#         \"application\": \"navigator\",
#         \"json_post\": \"{'configClass': '{{ plugin_load_response_content.configClass }}', 'name': '{{ plugin_load_response_content.name }}',
#          'ordering': 1, 'filename': 'https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/ier/EnterpriseRecordsPlugin/IERApplicationPlugin.jar',
#          'version': '{{ plugin_load_response_content.version }}', 'dependencies': [], 'configuration': null}\",
#         \"userid\": \"cpadmin\",
#         \"id\": \"{{ plugin_load_response_content.id }}\",
#         \"desktop\": \"admin\"
#       }"
#     return_content: true
#     follow_redirects: all
#     body_format: form-urlencoded
#     validate_certs: false
#     headers:
#       Content-Type: "application/x-www-form-urlencoded"
#       Connection: "keep-alive"
#       Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
#       security_token: "{{ content.security_token }}"
#       Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
#       auth-token-realm: "InternalIamRealm"
#     timeout: 60
#   register: plugin_add_response
#   failed_when: "'The configuration was added' not in plugin_add_response.content"
#   when: not plugin_registered

# - name: Register IERApplicationPlugin
#   ansible.builtin.uri:
#     url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/plugin?\
#     desktop=admin&\
#     application=navigator&\
#     fileName={{ 'https://cpd-'+cp4ba_project_name+'.'+apps_endpoint_domain+'/ier/EnterpriseRecordsPlugin/IERApplicationPlugin.jar' | urlencode() }}&\
#     userid=cpadmin"
#     method: GET
#     return_content: true
#     follow_redirects: all
#     body_format: form-urlencoded
#     validate_certs: false
#     headers:
#       Content-Type: "application/x-www-form-urlencoded"
#       Connection: "keep-alive"
#       Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
#       security_token: "{{ content.security_token }}"
#       Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
#       auth-token-realm: "InternalIamRealm"
#     timeout: 60
#   register: plugin_register_response
#   failed_when: "'name' not in plugin_register_response.content"
#   when: not plugin_registered

# - name: Configure IERApplicationPlugin
#   ansible.builtin.uri:
#     url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/plugin?\
#       repositoryId=FPOS&\
#       navigatorVersionNumber=4&\
#       plugin=IERApplicationPlugin&\
#       action=ierGetRepositoryAttributes&\
#       desktop=admin"
#     method: POST
#     return_content: true
#     follow_redirects: all
#     body_format: form-urlencoded
#     validate_certs: false
#     headers:
#       Content-Type: "application/x-www-form-urlencoded"
#       Connection: "keep-alive"
#       Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
#       security_token: "{{ content.security_token }}"
#       Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
#       auth-token-realm: "InternalIamRealm"
#     timeout: 60
#   register: plugin_configure_response
#   failed_when: "'name' not in plugin_configure_response.content"
#   when: not plugin_registered

- name: Set Task Manager service URL
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerServiceURL"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/tm/api/v1"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager log directory
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerLogDirectory"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=/opt/ibm/viewerconfig/logs/"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager administrator user ID
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerAdminUserId"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=cpadmin"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager administrator password
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerAdminPassword"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value={{ cp4ba_universal_password }}"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Enable Task Manager
  ansible.builtin.uri:
    url: >-
      https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/
      jaxrs/api/admin/configuration/settings/default/taskManagerServiceEnabled
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=true"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Daeja License Path
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/viewOne/default/virtualLicenseFilePath"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=/opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ cpadmin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Get Navigator Pods
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - "app={{ cp4ba_cr_meta_name }}-navigator-deploy"
  register: pods
  retries: 40
  delay: 15

- name: Delete Navigator pods
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    state: absent
    namespace: "{{ cp4ba_project_name }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ pods.resources }}"

- name: Wait for Navigator Deployment Available State
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: v1
    common_resource_kind: Deployment
    common_resource_name: "{{ cp4ba_cr_meta_name }}-navigator-deploy"
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Available
    common_retries: 80
    common_delay: 15

- name: Create Project
  ansible.builtin.include_role:
    name: common
    tasks_from: create-project
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: "{{ cp4ba_output_namespace }}"
    common_output_directory: "{{ cp4ba_output_directory }}"
    common_project_output_name: "cp4ba-output-project.yaml"

- name: Prepare post-deploy.md
  ansible.builtin.template:
    src: postdeploy.md.j2
    dest: "{{ cp4ba_output_directory }}/postdeploy.md"
    mode: u+rwx

- name: Prepare post-deploy.md Config Map
  ansible.builtin.template:
    src: postdeploy-configmap.yaml.j2
    dest: "{{ cp4ba_output_directory }}/postdeploy-configmap.yaml"
    mode: u+rwx

- name: Add post-deploy.md Config Map
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/postdeploy-configmap.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15
