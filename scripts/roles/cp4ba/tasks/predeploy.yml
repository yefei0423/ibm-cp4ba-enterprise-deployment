- name: Create Project
  ansible.builtin.include_role:
    name: common
    tasks_from: create-project
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_output_directory: "{{ cp4ba_output_directory }}"

- name: Prepare yaml file for shared PVC
  ansible.builtin.template:
    src: operator/sharedpvc.yaml.j2
    dest: "{{ cp4ba_output_directory }}/sharedpvc.yaml"
    mode: u+rwx

- name: Add Shared PVC
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/sharedpvc.yaml"

- name: Prepare yaml file for log PVC
  ansible.builtin.template:
    src: operator/logpvc.yaml.j2
    dest: "{{ cp4ba_output_directory }}/logpvc.yaml"
    mode: u+rwx

- name: Add log PVC
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/logpvc.yaml"

- name: Create ICR Secret
  ansible.builtin.include_role:
    name: common
    tasks_from: create-icr-secret
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_output_directory: "{{ cp4ba_output_directory }}"
    common_icr_secret_name: "{{ item }}"
    common_icr_password: "{{ cp4ba_icr_password }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
  with_items:
    - admin.registrykey
    - ibm-entitlement-key

- name: Prepare yaml file for OperatorGroup
  ansible.builtin.template:
    src: operator/operatorgroup.yaml.j2
    dest: "{{ cp4ba_output_directory }}/operatorgroup.yaml"
    mode: u+rwx

- name: Add OperatorGroup
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/operatorgroup.yaml"

- name: Prepare yaml file for Subscription
  ansible.builtin.template:
    src: operator/subscription.yaml.j2
    dest: "{{ cp4ba_output_directory }}/subscription.yaml"
    mode: u+rwx

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=cluster-setting-up-in-openshift-console
- name: Add Subscription
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/subscription.yaml"

- name: Manage Manual Operator ibm-cp4a-operator
  ansible.builtin.include_role:
    name: common
    tasks_from: manage-manual-operator
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: "{{ cp4ba_project_name }}"
    common_label_selector_stub: ibm-cp4a-operator

- name: Wait for ICP4ACluster CRD to be Established
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-crd
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_crd_name: icp4aclusters.icp4a.ibm.com

- name: Download DB2 JDBC license
  kubernetes.core.k8s_cp:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    remote_path: /opt/ibm/db2/V11.5.0.0/java/db2jcc_license_cu.jar
    local_path: "{{ cp4ba_output_directory }}/db2jcc_license_cu.jar"
    state: from_pod

# This is needed as ansible k8s_cp is not reliable for larger files
- name: Nexus upload DB2 JDBC license
  ansible.builtin.include_role:
    name: common
    tasks_from: nexus-upload
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_file_folder_path: "{{ cp4ba_output_directory }}"
    common_file_name: db2jcc_license_cu.jar
    common_universal_password: "{{ cp4ba_universal_password }}"

- name: Download DB2 JDBC driver
  kubernetes.core.k8s_cp:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    remote_path: /opt/ibm/db2/V11.5.0.0/java/db2jcc4.jar
    local_path: "{{ cp4ba_output_directory }}/db2jcc4.jar"
    state: from_pod

# This is needed as ansible k8s_cp is not reliable for larger files
- name: Nexus upload DB2 JDBC driver
  ansible.builtin.include_role:
    name: common
    tasks_from: nexus-upload
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_file_folder_path: "{{ cp4ba_output_directory }}"
    common_file_name: db2jcc4.jar
    common_universal_password: "{{ cp4ba_universal_password }}"

- name: Get CP4BA operator pod
  kubernetes.core.k8s_info:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    api_version: v1
    kind: Pod
    namespace: "{{ cp4ba_project_name }}"
    label_selectors:
      - name=ibm-cp4a-operator
  register: cp4ba_operator_pod

- name: Set CP4BA operator pod name
  ansible.builtin.set_fact:
    cp4ba_operator_pod_name: "{{ cp4ba_operator_pod.resources[0].metadata.name }}"

- name: Create jdbc folder in Operator
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ cp4ba_operator_pod_name }}"
    command: >
      mkdir -p /opt/ansible/share/jdbc/db2/
  register: command_status

- name: Download DB2 JDBC license to Operator
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ cp4ba_operator_pod_name }}"
    command: >
      curl -kv --user "cpadmin:{{ cp4ba_universal_password }}" http://{{ nexus_hostname }}:8081/repository/raw-hosted/cp4ba/db2jcc_license_cu.jar
      --output /opt/ansible/share/jdbc/db2/db2jcc_license_cu.jar
  register: command_status

- name: Download DB2 JDBC driver to Operator
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: "{{ cp4ba_project_name }}"
    pod: "{{ cp4ba_operator_pod_name }}"
    command: >
      curl -kv --user "cpadmin:{{ cp4ba_universal_password }}" http://{{ nexus_hostname }}:8081/repository/raw-hosted/cp4ba/db2jcc4.jar
      --output /opt/ansible/share/jdbc/db2/db2jcc4.jar
  register: command_status

- name: Check that the {{ cp4ba_wildcard_key_path }} exists
  ansible.builtin.stat:
    path: "{{ cp4ba_wildcard_key_path }}"
  register: cp4ba_wildcard_key_file

- name: Check that the {{ cp4ba_ca_crt_path }} exists
  ansible.builtin.stat:
    path: "{{ cp4ba_ca_crt_path }}"
  register: cp4ba_ca_crt_file

- name: Ensure we have CA certificates and wildcards
  ansible.builtin.include_role:
    name: global_ca
  when: not cp4ba_wildcard_key_file.stat.exists or not cp4ba_ca_crt_file.stat.exists

- name: Load TLS key data
  ansible.builtin.slurp:
    src: '{{ cp4ba_wildcard_key_path }}'
  register: slurped_key_data

- name: Decode data and store as fact
  ansible.builtin.set_fact:
    _tls_key: "{{ slurped_key_data.content }}"

- name: Load TLS crt data
  ansible.builtin.slurp:
    src: '{{ cp4ba_wildcard_crt_path }}'
  register: slurped_crt_data

- name: Decode data and store as fact
  ansible.builtin.set_fact:
    _tls_crt: "{{ slurped_crt_data.content }}"

- name: Load CA TLS key data
  ansible.builtin.slurp:
    src: '{{ cp4ba_ca_key_path }}'
  register: slurped_ca_key_data

- name: Decode data and store as fact
  ansible.builtin.set_fact:
    _ca_tls_key: "{{ slurped_ca_key_data.content }}"

- name: Load CA TLS crt data
  ansible.builtin.slurp:
    src: '{{ cp4ba_ca_crt_path }}'
  register: slurped_ca_crt_data

- name: Decode data and store as fact
  ansible.builtin.set_fact:
    _ca_tls_crt: "{{ slurped_ca_crt_data.content }}"

- name: Prepare yaml file for custom IAF TLS Secret
  ansible.builtin.template:
    src: iaf/iaf-tls-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/iaf-tls-secret.yaml"
    mode: u+rwx

- name: Add custom IAF TLS Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/iaf-tls-secret.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for AutomationUIConfig CRD to be Established
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-crd
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_crd_name: automationuiconfigs.core.automation.ibm.com

- name: Wait for Deployments to be Available
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: v1
    common_resource_kind: Deployment
    common_resource_name: "{{ item }}"
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Available
    common_retries: 80
    common_delay: 15
  with_items:
    - iaf-core-operator-controller-manager
    - iaf-operator-controller-manager

- name: Prepare yaml file for AutomationUiConfig CR
  ansible.builtin.template:
    src: iaf/automationuiconfig.yaml.j2
    dest: "{{ cp4ba_output_directory }}/automationuiconfig.yaml"
    mode: u+rwx

# Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=foundation-custom-resources#automationuiconfig
# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=certificates-providing-root-ca-certificate Note
- name: Add AutomationUIConfig CR
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/automationuiconfig.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for AutomationUIConfig instance Ready state
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: core.automation.ibm.com/v1beta1
    common_resource_kind: AutomationUIConfig
    common_resource_name: iaf-system
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Ready
    common_retries: 80
    common_delay: 15

- name: Prepare yaml file for root CA Secret
  ansible.builtin.template:
    src: shared/root-ca-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/root-ca-secret.yaml"
    mode: u+rwx

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=certificates-providing-root-ca-certificate
- name: Add root CA Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/root-ca-secret.yaml"

# TODO verify if we need this when Zen front door is used. Maybe for External Share ingress Routes?
# echo
# echo ">>>>$(print_timestamp) Create wildcard certificate Secret"
# # Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=certificates-providing-external-routes
# oc create secret tls cp4ba-wildcard --cert ../global-ca/wildcard.crt --key ../global-ca/wildcard.key
# # TODO needed the same for ADP CDS pod with different name, report bug, wait for fix. roles\common\tasks\fncm\fncm-ext-tls-certification.yml
# doesnt ganarate this secret, CDS deployment counts on it exist. temporarily resolved by omitting external_tls_certificate_secret from main cr.yaml
# # oc create secret tls cp4ba-fncm-ext-tls-secret --cert ../global-ca/wildcard.crt --key ../global-ca/wildcard.key

- name: Prepare yaml file for LDAP bind Secret
  ansible.builtin.template:
    src: shared/ldap-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/ldap-secret.yaml"
    mode: u+rwx

- name: Add LDAP bind Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/ldap-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=engine-creating-secrets-protect-sensitive-configuration-data
# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=studio-creating-secrets-protect-sensitive-configuration-data
- name: Prepare yaml file for RR Secret
  ansible.builtin.template:
    src: rr/rr-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/rr-secret.yaml"
    mode: u+rwx

- name: Add RR Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/rr-secret.yaml"

# Based on
# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=ban-creating-secrets-protect-sensitive-business-automation-navigator-configuration-data
- name: Prepare yaml file for BAN Secret
  ansible.builtin.template:
    src: ban/ban-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/ban-secret.yaml"
    mode: u+rwx

- name: Add BAN Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/ban-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=studio-creating-secrets-protect-sensitive-configuration-data
- name: Prepare yaml file for BAS Secret
  ansible.builtin.template:
    src: bas/bas-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/bas-secret.yaml"
    mode: u+rwx

- name: Add BAS Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/bas-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=insights-customizing-kafka-elasticsearch-server-configuration
# Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=p-system-requirements
# Based on https://github.com/IBM/automation/tree/main/cr-examples/AutomationBase
# Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=foundation-custom-resources#automationbase
- name: Prepare yaml file for IAF Issuer
  ansible.builtin.template:
    src: iaf/iaf-issuer.yaml.j2
    dest: "{{ cp4ba_output_directory }}/iaf-issuer.yaml"
    mode: u+rwx

- name: Add IAF Issuer
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/iaf-issuer.yaml"

- name: Prepare yaml file for Global CA certificate Secret
  ansible.builtin.template:
    src: iaf/global-ca-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/global-ca-secret.yaml"
    mode: u+rwx

- name: Add Global CA crt Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/global-ca-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=configuration-operational-datastore
# Username change is not described
- name: Prepare yaml file for IAF admin ES user Secret
  ansible.builtin.template:
    src: iaf/es-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/es-secret.yaml"
    mode: u+rwx

- name: Add IAF admin ES user Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/es-secret.yaml"

- name: Prepare yaml file for AutomationBase CR
  ansible.builtin.template:
    src: iaf/automationbase.yaml.j2
    dest: "{{ cp4ba_output_directory }}/automationbase.yaml"
    mode: u+rwx

- name: Add AutomationBase CR
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/automationbase.yaml"

- name: Manage Manual Operator ibm-crossplane-operator-app
  ansible.builtin.include_role:
    name: common
    tasks_from: manage-manual-operator
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: ibm-common-services
    common_label_selector_stub: ibm-crossplane-operator-app

- name: Manage Manual Operator ibm-crossplane-provider-kubernetes-operator-app
  ansible.builtin.include_role:
    name: common
    tasks_from: manage-manual-operator
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: ibm-common-services
    common_label_selector_stub: ibm-crossplane-provider-kubernetes-operator-app

- name: Manage Manual Operator ibm-events-operator
  ansible.builtin.include_role:
    name: common
    tasks_from: manage-manual-operator
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_namespace_name: ibm-common-services
    common_label_selector_stub: ibm-events-operator

- name: Wait for AutomationBase instance Ready state
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: base.automation.ibm.com/v1beta1
    common_resource_kind: AutomationBase
    common_resource_name: foundation-iaf
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Ready
    common_retries: 30
    common_delay: 60

- name: Wait for Apicurio Deployment to be Available
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: v1
    common_resource_kind: Deployment
    common_resource_name: iaf-system-apicurio
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Available
    common_retries: 80
    common_delay: 15

- name: Wait for KafkaUser CRD to be Established
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-crd
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit)  }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_crd_name: kafkausers.ibmevents.ibm.com

- name: Prepare yaml file for KafkaUser Secret
  ansible.builtin.template:
    src: iaf/kafkauser-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/kafkauser-secret.yaml"
    mode: u+rwx

- name: Add KafkaUser Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/kafkauser-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/1.0?topic=foundation-administration-guide#day-2-operations-for-kafka reference for Strimzi in Kafka Day 2
- name: Prepare yaml file for KafkaUser CR
  ansible.builtin.template:
    src: iaf/kafkauser.yaml.j2
    dest: "{{ cp4ba_output_directory }}/kafkauser.yaml"
    mode: u+rwx

- name: Add KafkaUser CR
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/kafkauser.yaml"

- name: Wait for KafkaUser instance Ready state
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_api_version: ibmevents.ibm.com/v1beta2
    common_resource_kind: KafkaUser
    common_resource_name: cpadmin
    common_resource_namespace: "{{ cp4ba_project_name }}"
    common_condition_name: Ready
    common_retries: 80
    common_delay: 15

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=secrets-creating-custom-bpc-workforce-secret
# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=secrets-creating-custom-bai-secret
- name: Prepare yaml file for BAI Secret
  ansible.builtin.template:
    src: bai/bai-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/bai-secret.yaml"
    mode: u+rwx

- name: Add BAI Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/bai-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=manager-configuring-external-database
- name: Prepare yaml file for ODM DB Secret
  ansible.builtin.template:
    src: odm/odm-db-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/odm-db-secret.yaml"
    mode: u+rwx

- name: Add ODM DB Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/odm-db-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=access-mapping-odm-roles-iam-groups-users
# Adds cpadmin user to all roles and cpadmins to all groups.
- name: Prepare yaml file for ODM web security Secret
  ansible.builtin.template:
    src: odm/odm-web-security-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/odm-web-security-secret.yaml"
    mode: u+rwx

- name: Add ODM web security Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/odm-web-security-secret.yaml"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=services-configuring-decision-runtime
# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=services-configuring-mongodb-storage
- name: Prepare yaml file for ADS Secret
  ansible.builtin.template:
    src: ads/ads-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/ads-secret.yaml"
    mode: u+rwx

- name: Add ADS Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/ads-secret.yaml"

- name: Create Google TLS secret
  block:

    # Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=manager-configuring-identity-provider-connection point 4.
    - name: Prepare yaml file for FNCM IDP Secret
      ansible.builtin.template:
        src: fncm/fncm-google-idp-secret.yaml.j2
        dest: "{{ cp4ba_output_directory }}/fncm-google-idp-secret.yaml"
        mode: u+rwx

    - name: Add FNCM IDP Secret
      kubernetes.core.k8s:
        api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
        host: "{{ cp4ba_k8s_host | default(omit) }}"
        state: present
        force: false
        merge_type: merge
        src: "{{ cp4ba_output_directory }}/fncm-google-idp-secret.yaml"

    - name: Get the cert from an RDP port
      community.crypto.get_certificate:
        host: accounts.google.com
        port: 443
      run_once: true
      register: cert

    - name: Set google crt
      ansible.builtin.set_fact:
        _google_crt: "{{ cert.cert }}"

    - name: Prepare yaml file for FNCM Google TLS Secret
      ansible.builtin.template:
        src: fncm/fncm-google-tls-secret.yaml.j2
        dest: "{{ cp4ba_output_directory }}/fncm-google-tls-secret.yaml"
        mode: u+rwx

    - name: Add FNCM Google TLS Secret
      kubernetes.core.k8s:
        api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
        host: "{{ cp4ba_k8s_host | default(omit) }}"
        state: present
        force: false
        merge_type: merge
        src: "{{ cp4ba_output_directory }}/fncm-google-tls-secret.yaml"

  when: cp4ba_external_share_google | bool

# Based on
# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=fcm-creating-secrets-protect-sensitive-filenet-content-manager-configuration-data
- name: Prepare yaml file for FNCM Secret
  ansible.builtin.template:
    src: fncm/fncm-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/fncm-secret.yaml"
    mode: u+rwx

- name: Add FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/fncm-secret.yaml"

# Based on
# https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=fcm-creating-secrets-protect-sensitive-filenet-content-manager-configuration-data
- name: Prepare yaml file for IER Secret
  ansible.builtin.template:
    src: ier/ier-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/ier-secret.yaml"
    mode: u+rwx

- name: Add IER Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/ier-secret.yaml"

# Make sure FNCM secret already exists
- name: Add FPOS OS to FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    api_version: v1
    kind: Secret
    name: ibm-fncm-secret
    namespace: "{{ cp4ba_project_name }}"
    definition:
      data:
        fposDBUsername: "{{ 'fpos' | b64encode }}"
        fposDBPassword: "{{ cp4ba_universal_password | b64encode }}"

- name: Add ROS OS to FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    api_version: v1
    kind: Secret
    name: ibm-fncm-secret
    namespace: "{{ cp4ba_project_name }}"
    definition:
      data:
        rosDBUsername: "{{ 'ros' | b64encode }}"
        rosDBPassword: "{{ cp4ba_universal_password | b64encode }}"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=engine-creating-secrets-protect-sensitive-configuration-data
- name: Prepare yaml file for AAE Secret
  ansible.builtin.template:
    src: aae/aae-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/aae-secret.yaml"
    mode: u+rwx

- name: Add AAE Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/aae-secret.yaml"

# If you plan to use AAE data persistence, you need to update FNCM secret for new object store.
# Make sure FNCM secret already exists
- name: Add AAE OS to FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    api_version: v1
    kind: Secret
    name: ibm-fncm-secret
    namespace: "{{ cp4ba_project_name }}"
    definition:
      data:
        aeosDBUsername: "{{ 'aeos' | b64encode }}"
        aeosDBPassword: "{{ cp4ba_universal_password | b64encode }}"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=dp-creating-secrets-protect-sensitive-document-processing-configuration-data
- name: Prepare yaml file for ADP Secret
  ansible.builtin.template:
    src: adp/adp-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/adp-secret.yaml"
    mode: u+rwx

- name: Add ADP Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/adp-secret.yaml"

- name: Add ADP OS to FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    api_version: v1
    kind: Secret
    name: ibm-fncm-secret
    namespace: "{{ cp4ba_project_name }}"
    definition:
      data:
        devos1DBUsername: "{{ 'devos1' | b64encode }}"
        devos1DBPassword: "{{ cp4ba_universal_password | b64encode }}"

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=authoring-creating-secrets-protect-sensitive-configuration-data
- name: Prepare yaml file for BAWAUT Secret
  ansible.builtin.template:
    src: bawaut/bawaut-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/bawaut-secret.yaml"
    mode: u+rwx

- name: Add BAWAUT Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/bawaut-secret.yaml"

- name: Add BAWAUT OSs to FNCM Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    api_version: v1
    kind: Secret
    name: ibm-fncm-secret
    namespace: "{{ cp4ba_project_name }}"
    definition: |
      data:
        {{ item }}DBUsername: {{ item | b64encode }}
        {{ item }}DBPassword: {{ cp4ba_universal_password | b64encode }}
  with_items:
    - badocs
    - batos
    - bados
    # Update FNCM secret for new Case History connection.
    # Make sure FNCM secret already exists
    - ch

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/21.0.3?topic=services-optional-customizing-runtime-server-properties
# Based on https://www.ibm.com/docs/en/baw/20.x?topic=work-configuring-email-notifications
# Based on https://www.ibm.com/docs/en/baw/20.x?topic=configuration-creating-100customxml-file
- name: Prepare yaml file for BAWAUT Secret
  ansible.builtin.template:
    src: bawaut/bawaut-custom-xml-secret.yaml.j2
    dest: "{{ cp4ba_output_directory }}/bawaut-custom-xml-secret.yaml"
    mode: u+rwx

- name: Add BAWAUT Secret
  kubernetes.core.k8s:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ cp4ba_output_directory }}/bawaut-custom-xml-secret.yaml"
