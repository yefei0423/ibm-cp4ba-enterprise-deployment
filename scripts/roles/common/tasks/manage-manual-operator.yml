# Example of the functionality call
#
# - name: Manage Manual Operator
#   ansible.builtin.include_role:
#     name: common
#     tasks_from: manage-manual-operator
#   vars:
#     common_k8s_api_key: "{{ prefix_k8s_api_key | default(omit)  }}"
#     common_k8s_host: "{{ prefix_k8s_host | default(omit) }}"
#     common_namespace_name: _namespace_name
#     common_label_selector_stub: _label_selector_stub
#     common_force_approve: _force_approve

- name: Set label_selectors
  ansible.builtin.set_fact:
    common_label_selector: "{{ ('operators.coreos.com/'+common_label_selector_stub+'.'+common_namespace_name)[:84] }}"

- name: Wait for Operator Subscription with label {{ common_label_selector }} to appear
  kubernetes.core.k8s_info:
    api_key: "{{ common_k8s_api_key | default(omit) }}"
    host: "{{ common_k8s_host | default(omit) }}"
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ common_namespace_name }}"
    label_selectors:
      - "{{ common_label_selector }}"
  register: common_subscription
  retries: 40
  delay: 30
  until: ('InstallPlan' in common_subscription | json_query(condition_query) | unique)
  vars:
    condition_query: 'resources[*].status.installplan.kind'

- name: Handle InstallPlan
  block:

    - name: Get Install Plan Resource name
      ansible.builtin.set_fact:
        common_install_plan_name: "{{ common_subscription | json_query('resources[0].status.installplan.name') }}"

    - name: Get Install Plan {{ common_install_plan_name }}
      kubernetes.core.k8s_info:
        api_key: "{{ common_k8s_api_key | default(omit) }}"
        host: "{{ common_k8s_host | default(omit) }}"
        api_version: operators.coreos.com/v1alpha1
        kind: InstallPlan
        name: "{{ common_install_plan_name }}"
        namespace: "{{ common_namespace_name }}"
      register: install_plan

    - name: Approve Install Plan {{ common_install_plan_name }}
      kubernetes.core.k8s:
        api_key: "{{ common_k8s_api_key | default(omit) }}"
        host: "{{ common_k8s_host | default(omit) }}"
        state: present
        api_version: operators.coreos.com/v1alpha1
        kind: InstallPlan
        name: "{{ common_install_plan_name }}"
        namespace: "{{ common_namespace_name }}"
        definition:
          spec:
            approved: true
      when: install_plan.resources | length != 0

    - name: Wait for Operator Deployment with label {{ common_label_selector }} to be Available
      kubernetes.core.k8s_info:
        api_key: "{{ common_k8s_api_key | default(omit) }}"
        host: "{{ common_k8s_host | default(omit) }}"
        api_version: v1
        kind: Deployment
        namespace: "{{ common_namespace_name }}"
        label_selectors:
          - "{{ common_label_selector }}"
      register: common_deployment
      retries: 80
      delay: 15
      until: (['True'] in common_deployment | json_query(condition_query) | unique )
      vars:
        condition_query: "resources[*].status.conditions[?type == 'Available'].status"

  when: common_subscription.resources[0].status.installedCSV is not defined or (common_force_approve | default(false))
