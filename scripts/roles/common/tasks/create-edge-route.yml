# Example of the functionality call
#
# - name: Crete Edge Route
#   ansible.builtin.include_role:
#     name: common
#     tasks_from: create-edge-route
#   vars:
#     common_k8s_api_key: "{{ prefix_k8s_api_key | default(omit) }}"
#     common_k8s_host: "{{ prefix_k8s_host | default(omit) }}"
#     common_namespace_name: namespace_name
#     common_route_name: _route_name
#     common_service_name: service_name
#     common_wildcard_crt_path: wildcard_crt_path
#     common_wildcard_key_path: wildcard_key_path
#     common_ca_crt_path: ca_crt_path
#     common_apps_endpoint_domain: apps_endpoint_domain
#     common_output_directory: "{{ prefix_output_directory }}"

- name: Check that the {{ common_wildcard_key_path }} exists
  ansible.builtin.stat:
    path: "{{ common_wildcard_key_path }}"
  register: common_wildcard_key_file

- name: Check that the {{ common_ca_crt_path }} exists
  ansible.builtin.stat:
    path: "{{ common_ca_crt_path }}"
  register: common_ca_crt_file

- name: Ensure we have CA certificates and wildcards
  ansible.builtin.include_role:
    name: global_ca
  when: not common_wildcard_key_file.stat.exists or not common_ca_crt_file.stat.exists

- name: Load TLS key data
  ansible.builtin.slurp:
    src: '{{ common_wildcard_key_path }}'
  register: common_edge_route_slurped_wildcard_key_data

- name: Load TLS crt data
  ansible.builtin.slurp:
    src: '{{ common_wildcard_crt_path }}'
  register: common_edge_route_slurped_wildcard_crt_data

- name: Load TLS ca data
  ansible.builtin.slurp:
    src: '{{ common_ca_crt_path }}'
  register: common_edge_route_slurped_ca_data

- name: Prepare yaml file for {{ common_service_name }}-route Route
  ansible.builtin.template:
    src: edge-route.yaml.j2
    dest: "{{ common_output_directory }}/edge-route.yaml"
    mode: u+rwx

- name: Create {{ common_service_name }}-route Route
  kubernetes.core.k8s:
    api_key: "{{ common_k8s_api_key | default(omit) }}"
    host: "{{ common_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    namespace: "{{ common_namespace_name }}"
    src: "{{ common_output_directory }}/edge-route.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for resource condition generic
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition-generic
  vars:
    common_api_version: route.openshift.io/v1
    common_resource_kind: Route
    common_resource_name: "{{ common_route_name }}"
    common_resource_namespace: "{{ common_namespace_name }}"
    common_condition_query: resources[*].status.ingress[0].conditions[0].status
    common_condition_value: 'True'
    common_retries: 10
    common_delay: 10
